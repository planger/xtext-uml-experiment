/*
 * generated by Xtext 2.10.0
 */
grammar InternalUmlRtText;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.eclipse.papyrusrt.umlrt.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.papyrusrt.umlrt.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.papyrusrt.umlrt.services.UmlRtTextGrammarAccess;

}

@parser::members {

 	private UmlRtTextGrammarAccess grammarAccess;

    public InternalUmlRtTextParser(TokenStream input, UmlRtTextGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected UmlRtTextGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='model'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelAccess().getModelKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getModelAccess().getModelAction_1(),
					$current);
			}
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getPackagedElementPackageableElementParserRuleCall_4_0());
				}
				lv_packagedElement_4_0=rulePackageableElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"packagedElement",
						lv_packagedElement_4_0,
						"org.eclipse.papyrusrt.umlrt.UmlRtText.PackageableElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRulePackageableElement
entryRulePackageableElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageableElementRule()); }
	iv_rulePackageableElement=rulePackageableElement
	{ $current=$iv_rulePackageableElement.current; }
	EOF;

// Rule PackageableElement
rulePackageableElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getPackageableElementAccess().getPackageParserRuleCall());
	}
	this_Package_0=rulePackage
	{
		$current = $this_Package_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRulePackage
entryRulePackage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageRule()); }
	iv_rulePackage=rulePackage
	{ $current=$iv_rulePackage.current; }
	EOF;

// Rule Package
rulePackage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPackageAccess().getProtocolContainerParserRuleCall_0());
		}
		this_ProtocolContainer_0=ruleProtocolContainer
		{
			$current = $this_ProtocolContainer_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPackageAccess().getModelParserRuleCall_1());
		}
		this_Model_1=ruleModel
		{
			$current = $this_Model_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleProtocolContainer
entryRuleProtocolContainer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProtocolContainerRule()); }
	iv_ruleProtocolContainer=ruleProtocolContainer
	{ $current=$iv_ruleProtocolContainer.current; }
	EOF;

// Rule ProtocolContainer
ruleProtocolContainer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getProtocolContainerAccess().getProtocolContainerAction_0(),
					$current);
			}
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getProtocolContainerAccess().getUnorderedGroup_1());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getProtocolContainerAccess().getUnorderedGroup_1(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getProtocolContainerAccess().getUnorderedGroup_1(), 0);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getProtocolContainerAccess().getPackagedElementProtocolParserRuleCall_1_0_0());
									}
									lv_packagedElement_2_0=ruleProtocol
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getProtocolContainerRule());
										}
										add(
											$current,
											"packagedElement",
											lv_packagedElement_2_0,
											"org.eclipse.papyrusrt.umlrt.UmlRtText.Protocol");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getProtocolContainerAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getProtocolContainerAccess().getUnorderedGroup_1(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getProtocolContainerAccess().getUnorderedGroup_1(), 1);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getProtocolContainerAccess().getPackagedElementRTMessageSetParserRuleCall_1_1_0());
									}
									lv_packagedElement_3_0=ruleRTMessageSet
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getProtocolContainerRule());
										}
										add(
											$current,
											"packagedElement",
											lv_packagedElement_3_0,
											"org.eclipse.papyrusrt.umlrt.UmlRtText.RTMessageSet");
										afterParserOrEnumRuleCall();
									}
								)
								))+
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getProtocolContainerAccess().getUnorderedGroup_1());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getProtocolContainerAccess().getUnorderedGroup_1())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getProtocolContainerAccess().getUnorderedGroup_1());
				}
		)
	)
;

// Entry rule entryRuleProtocol
entryRuleProtocol returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProtocolRule()); }
	iv_ruleProtocol=ruleProtocol
	{ $current=$iv_ruleProtocol.current; }
	EOF;

// Rule Protocol
ruleProtocol returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='protocol'
		{
			newLeafNode(otherlv_0, grammarAccess.getProtocolAccess().getProtocolKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getProtocolAccess().getProtocolAction_1(),
					$current);
			}
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getProtocolAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProtocolRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleRTMessageSet
entryRuleRTMessageSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRTMessageSetRule()); }
	iv_ruleRTMessageSet=ruleRTMessageSet
	{ $current=$iv_ruleRTMessageSet.current; }
	EOF;

// Rule RTMessageSet
ruleRTMessageSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='interface'
		{
			newLeafNode(otherlv_0, grammarAccess.getRTMessageSetAccess().getInterfaceKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRTMessageSetAccess().getRTMessageSetAction_1(),
					$current);
			}
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getRTMessageSetAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRTMessageSetRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
