grammar org.eclipse.papyrusrt.umlrt.UmlRtText 
	with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/uml2/5.0.0/UML" as uml
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

/** <Package Import> UML Primitive Types **/
import "http://www.eclipse.org/uml2/5.0.0/Types" as types

/** UML Profile **/
generate umlrt "http://www.eclipse.org/papyrus/umlrt" as umlrt

Model returns uml::Model:
	'model' {uml::Model} name=ID '{'
		packagedElement+=(PackageableElement)*
	'}'
;

PackageableElement returns uml::PackageableElement:
	Package | Class
;

/**************************************************************/

/** Class **/
Class returns uml::Class:
	(Capsule | 'Class' {uml::Class} name=ID)
		
;

/** Property **/
Property returns uml::Property:
	(CapsulePart | 'Property' {uml::Property} name=ID)
;

/** Port **/
Port returns uml::Port:
	(RTPort | 'Port' {uml::Port} name=ID)
;

/** Connector **/
Connector returns uml::Connector:
	(RTConnector | 'Connector' {uml::Connector} name=ID)
;

/** RedefinableElement **/
RedefinableElement returns uml::RedefinableElement:
	(RTRedefinedElement | 'RedefinableElement' {uml::RedefinableElement} name=ID)
;

/** Package **/
Package returns uml::Package:
	(ProtocolContainer | Model | 'Package' {uml::Package} name=ID)
;

/** Interface **/
Interface returns uml::Interface:
	(RTMessageSet | 'Interface' {uml::Interface} name=ID)
;

/** Collaboration **/
Collaboration returns uml::Collaboration:
	(Protocol | 'Collaboration' {uml::Collaboration} name=ID)
;

/**************************************************************/

/** Capsule **/
Capsule returns umlrt::Capsule:
	'Capsule' {umlrt::Capsule} name=ID
		// it can have statemachines
		nestedClassifier+=Class
;

/** CapsulePart **/
CapsulePart returns umlrt::CapsulePart:
	'CapsulePart' {umlrt::CapsulePart} name=ID
		'IsNotification' isNotification = UML_BOOLEAN
		'IsPublish' isPublish = UML_BOOLEAN
		'IsWired' isWired = UML_BOOLEAN
		'Registration' registration = PortRegistrationType
		'RegistrationOverride' registrationOverride = UML_STRING
;

/** Protocol **/
Protocol returns umlrt::Protocol:
	'Protocol' {umlrt::Protocol} name=ID
			
;

/** RTPort **/
RTPort returns umlrt::RTPort:
	'RTPort' {umlrt::RTPort} name=ID
;

/** RTConnector **/
RTConnector returns umlrt::RTConnector:
	'RTConnector' {umlrt::RTConnector} name=ID
;

/** ProtocolContainer **/
ProtocolContainer returns umlrt::ProtocolContainer:
	'ProtocolContainer' {umlrt::ProtocolContainer} name=ID '{'
		packagedElement+=(Protocol|RTMessageSet)*
	'}'
;

/** RTRedefinedElement **/
RTRedefinedElement returns umlrt::RTRedefinedElement:
	'RTRedefinedElement' {umlrt::RTRedefinedElement} name=ID
		('RootFragment' rootFragment = RedefinableElement)?
;

/** RTMessageSet **/
RTMessageSet returns umlrt::RTMessageSet:
	'RTMessageSet' {umlrt::RTMessageSet} name=ID
		'RTMsgKind' rtMsgKind = RTMessageKind
;

/**************************************************************/

/** Boolean **/
terminal UML_BOOLEAN returns types::Boolean:
	'true' | 'false'
;

/** String **/
terminal UML_STRING returns types::String:
	'"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	"'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
;

/** PortRegistrationType **/
enum PortRegistrationType returns umlrt::PortRegistrationType:
	Automatic | Application | AutomaticLocked
;

/** RTMessageKind **/
enum RTMessageKind returns umlrt::RTMessageKind:
	in | out | inOut
;